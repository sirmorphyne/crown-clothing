{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  console.log(snapShot);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/SIDDHANT/Desktop/webpages/majorProject/crown-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","console","log","exists","displayName","email","createdAt","Date","set","error","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG,EAAf;AAGE,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAeC,cAAf,KAAiC;AACxE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAACC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAd;AACA,QAAMC,QAAQ,GAAC,MAAMJ,OAAO,CAACK,GAAR,EAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,MAAG,CAACA,QAAQ,CAACI,MAAb,EAAoB;AAClB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAwBZ,QAA9B;AACA,UAAMa,SAAS,GAAE,IAAIC,IAAJ,EAAjB;;AACA,QAAG;AACD,YAAMZ,OAAO,CAACa,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGZ;AAJa,OAAZ,CAAN;AAMD,KAPD,CAQA,OAAMe,KAAN,EAAY;AACVR,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCO,KAAK,CAACC,OAAxC;AACD;AACF;;AACD,SAAOf,OAAP;AACD,CAtBM;AAyBPL,QAAQ,CAACqB,aAAT,CAAuBpB,MAAvB;AACA,OAAO,MAAMqB,IAAI,GAAGtB,QAAQ,CAACsB,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAACN,QAAQ,CAACM,SAAT,EAAhB;AAGP,MAAMiB,QAAQ,GAAE,IAAIvB,QAAQ,CAACsB,IAAT,CAAcE,kBAAlB,EAAhB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAG;AAAX,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAKL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA9B;AACP,eAAevB,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    \r\n  }\r\n  export const createUserProfileDocument = async(userAuth,additionalData) =>{\r\n    if(!userAuth) return;\r\n\r\n    const userRef=firestore.doc(`users/${userAuth.uid}`);\r\n    const snapShot=await userRef.get();\r\n    console.log(snapShot);\r\n    if(!snapShot.exists){\r\n      const { displayName, email} = userAuth;\r\n      const createdAt= new Date();\r\n      try{\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        })\r\n      }\r\n      catch(error){\r\n        console.log('error creating user',error.message);\r\n      }\r\n    }\r\n    return userRef;\r\n  }\r\n\r\n\r\n  firebase.initializeApp(config);\r\n  export const auth = firebase.auth();\r\n  export const firestore=firebase.firestore();\r\n\r\n\r\n  const provider =new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({ prompt : 'select_account'});\r\n\r\n  export const signInWithGoogle = () =>auth.signInWithPopup(provider);\r\n  export default firebase;"]},"metadata":{},"sourceType":"module"}