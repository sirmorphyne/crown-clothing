{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyCGU0O5IFd8tX06VlU5Eh52hBEN-3pgp6w\",\n  authDomain: \"crown-db-910f5.firebaseapp.com\",\n  databaseURL: \"https://crown-db-910f5.firebaseio.com\",\n  projectId: \"crown-db-910f5\",\n  storageBucket: \"crown-db-910f5.appspot.com\",\n  messagingSenderId: \"855074196009\",\n  appId: \"1:855074196009:web:49ec08212b081dbae16a38\",\n  measurementId: \"G-4GY644P7F3\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  console.log(snapShot);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/LAPPY/Desktop/New folder/crown-clothing-master/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","console","log","exists","displayName","email","createdAt","Date","set","error","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,gCAFC;AAGbC,EAAAA,WAAW,EAAE,uCAHA;AAIbC,EAAAA,SAAS,EAAE,gBAJE;AAKbC,EAAAA,aAAa,EAAE,4BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWE,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAeC,cAAf,KAAiC;AACxE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAACC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAd;AACA,QAAMC,QAAQ,GAAC,MAAMJ,OAAO,CAACK,GAAR,EAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,MAAG,CAACA,QAAQ,CAACI,MAAb,EAAoB;AAClB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAwBZ,QAA9B;AACA,UAAMa,SAAS,GAAE,IAAIC,IAAJ,EAAjB;;AACA,QAAG;AACD,YAAMZ,OAAO,CAACa,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGZ;AAJa,OAAZ,CAAN;AAMD,KAPD,CAQA,OAAMe,KAAN,EAAY;AACVR,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCO,KAAK,CAACC,OAAxC;AACD;AACF;;AACD,SAAOf,OAAP;AACD,CAtBM;AAyBPb,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AACA,OAAO,MAAM6B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAACd,QAAQ,CAACc,SAAT,EAAhB;AAGP,MAAMiB,QAAQ,GAAE,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAhB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAG;AAAX,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAKL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA9B;AACP,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: \"AIzaSyCGU0O5IFd8tX06VlU5Eh52hBEN-3pgp6w\",\n  authDomain: \"crown-db-910f5.firebaseapp.com\",\n  databaseURL: \"https://crown-db-910f5.firebaseio.com\",\n  projectId: \"crown-db-910f5\",\n  storageBucket: \"crown-db-910f5.appspot.com\",\n  messagingSenderId: \"855074196009\",\n  appId: \"1:855074196009:web:49ec08212b081dbae16a38\",\n  measurementId: \"G-4GY644P7F3\"\n    \n  };\n  export const createUserProfileDocument = async(userAuth,additionalData) =>{\n    if(!userAuth) return;\n\n    const userRef=firestore.doc(`users/${userAuth.uid}`);\n    const snapShot=await userRef.get();\n    console.log(snapShot);\n    if(!snapShot.exists){\n      const { displayName, email} = userAuth;\n      const createdAt= new Date();\n      try{\n        await userRef.set({\n          displayName,\n          email,\n          createdAt,\n          ...additionalData\n        })\n      }\n      catch(error){\n        console.log('error creating user',error.message);\n      }\n    }\n    return userRef;\n  }\n\n\n  firebase.initializeApp(config);\n  export const auth = firebase.auth();\n  export const firestore=firebase.firestore();\n\n\n  const provider =new firebase.auth.GoogleAuthProvider();\n  provider.setCustomParameters({ prompt : 'select_account'});\n\n  export const signInWithGoogle = () =>auth.signInWithPopup(provider);\n  export default firebase;"]},"metadata":{},"sourceType":"module"}